import tkinter as tk
from tkinter import ttk
from tkinter import messagebox

def add_task():
    task_string = task_field.get()
    if len(task_string) == 0:
        messagebox.showinfo('Error', 'Field is Empty.')
    else:
        tasks.append(task_string)
        task_text.insert('end', task_string + '\n')
        task_field.delete(0, 'end')
def delete_task():
    try:
        
        the_value = tasks[-1]
        
        tasks.remove(the_value)
        
        task_text.delete('end-1c', 'end')
    except:
        messagebox.showinfo('Error', 'No Task Selected. Cannot Delete.')


def delete_all_tasks():
   
    tasks.clear()
   
    task_text.delete(0, 'end')
    

def close():
     print(tasks)
     guiWindow.destroy()

if __name__ == "__main__":
    guiWindow = tk.Tk()
    guiWindow.title("To-Do List Manager")
    guiWindow.geometry("500x450+750+250")
    guiWindow.resizable(0, 0)
    guiWindow.configure(bg="#FAEBD7")
    tasks = []
    header_frame = tk.Frame(guiWindow, bg="#FAEBD7")
    functions_frame = tk.Frame(guiWindow, bg="#FAEBD7")
    task_frame = tk.Frame(guiWindow, bg="#FAEBD7")

    header_frame.pack(fill='x')
    functions_frame.pack(fill='x')
    task_frame.pack(fill='both', expand=True)

    task_label = tk.Label(header_frame, text="Enter Task", bg="#FAEBD7")
    task_label.pack(side='left', padx=10, pady=10)
    task_field = tk.Entry(header_frame, width=40)
    task_field.pack(side='left', padx=10, pady=10)

    task_text = tk.Text(task_frame, width=40, height=10)
    task_text.pack(fill='both', expand=True)

    add_button = tk.Button(functions_frame, text="Add Task", command=add_task)
    add_button.pack(side='left', padx=10, pady=10)
    delete_button = tk.Button(functions_frame, text="Delete Task", command=delete_task)
    delete_button.pack(side='left', padx=10, pady=10)
    delete_all_button = tk.Button(functions_frame, text="Delete All Tasks", command=delete_all_tasks)
    delete_all_button.pack(side='left', padx=10, pady=10)
    close_button = tk.Button(functions_frame, text="Close", command=close)
    close_button.pack(side='left', padx=10, pady=10)

    guiWindow.mainloop()
